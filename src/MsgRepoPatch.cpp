#include "MsgRepoPatch.h"

template <typename... Ts> inline void ReplaceStringW(const char* strMatch, const wchar_t* wStrReplace, Ts... blockStartPtr)
{
    const uint8_t* msgBlock = TraverseSafePtr(blockStartPtr...);
    const uint32_t blockSize = *reinterpret_cast<const uint32_t*>(msgBlock + 4);

    const size_t strLen = (wcslen(wStrReplace) + 1) * 2;

    const char* strMask = "........................";
    const auto pattern = mem::pattern(strMatch, strMask);
    const auto region = mem::region(msgBlock, blockSize);
    wchar_t* str = mem::simd_scanner(pattern).scan(region).any();

    if (str != nullptr)
    {
        wcsncpy_s(str, strLen, wStrReplace, strLen);
    }
    else
    {
        AllocConsoleOnce();
        std::wcout << L"String replacement target for \"" << wStrReplace << L"\" not found.\n";
    }
}

extern void PatchMsgRepo()
{
    if (*CSLang == 1)
    {
        const char strMatch1[] = { 0x52, 0x0, 0x65, 0x0, 0x73, 0x0, 0x65, 0x0, 0x74, 0x0, 0x20, 0x0, 0x43, 0x0, 0x61, 0x0, 0x6D, 0x0, 0x65, 0x0, 0x72, 0x0, 0x61, 0x0 };
        ReplaceStringW(strMatch1, L"Track dodges", MsgRepoMenuItems_ptr);

        const char strMatch2[] = { 0x43, 0x0, 0x61, 0x0, 0x6D, 0x0, 0x65, 0x0, 0x72, 0x0, 0x61, 0x0, 0x20, 0x0, 0x53, 0x0, 0x70, 0x0, 0x65, 0x0, 0x65, 0x0, 0x64, 0x0 };
        ReplaceStringW(strMatch2, L"FOV", MsgRepoMenuItems_ptr);

        const char strMatch3[] = { 0x4D, 0x0, 0x6F, 0x0, 0x75, 0x0, 0x73, 0x0, 0x65, 0x0, 0x20, 0x0, 0x53, 0x0, 0x65, 0x0, 0x6E, 0x0, 0x73, 0x0, 0x69, 0x0, 0x74, 0x0 };
        ReplaceStringW(strMatch3, L"Sensitivity", MsgRepoMenuItems_ptr);

        const char strMatch4[] = { 0x43, 0x0, 0x61, 0x0, 0x6D, 0x0, 0x65, 0x0, 0x72, 0x0, 0x61, 0x0, 0x20, 0x0, 0x72, 0x0, 0x65, 0x0, 0x73, 0x0, 0x65, 0x0, 0x74, 0x0 };
        ReplaceStringW(strMatch4, L"Configure head tracking for dodges.", MsgRepoMenuDescr_ptr);

        const char strMatch5[] = { 0x53, 0x0, 0x65, 0x0, 0x74, 0x0, 0x20, 0x0, 0x63, 0x0, 0x61, 0x0, 0x6D, 0x0, 0x65, 0x0, 0x72, 0x0, 0x61, 0x0, 0x20, 0x0, 0x6D, 0x0 };
        ReplaceStringW(strMatch5, L"Set camera field of view.", MsgRepoMenuDescr_ptr);

        const char strMatch6[] = { 0x53, 0x0, 0x65, 0x0, 0x74, 0x0, 0x20, 0x0, 0x6D, 0x0, 0x6F, 0x0, 0x75, 0x0, 0x73, 0x0, 0x65, 0x0, 0x20, 0x0, 0x73, 0x0, 0x65, 0x0 };
        ReplaceStringW(strMatch6, L"Set sensitivity for camera movement.", MsgRepoMenuDescr_ptr);
    }
    else
    {
        AllocConsoleOnce();
        std::cout << "Game language is not set to English.\nReverting to default settings layout.\n";
    }
}